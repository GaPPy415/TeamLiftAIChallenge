class Handler:
    def __init__(self):
        self.skills = ['Python', 'relational database', 'Software engineering', 'data science', 'NLP', 'natural language processing', 'database engineer',
          'data engineer', 'data analyst', 'data visualization', 'data analytics', 'data mining', 'data warehousing', 'data modeling', 'data management',
          'data cleaning', 'data wrangling', 'data preprocessing', 'data transformation', 'data manipulation', 'data extraction', 'data integration',
          'data loading', 'data migration', 'data governance', 'data quality', 'data quality control', 'data quality assurance', 'data quality management',
          'data quality monitoring', 'data quality assessment', 'data quality improvement', 'data quality enhancement', 'data quality evaluation',
          'data quality validation', 'data quality verification', 'data quality reporting', 'data quality analysis', 'data quality measurement']
        # Additional skills generated by GitHub Copilot for testing

    def search(self, search_query):
        out = []
        search_query = search_query.lower()
        for x in self.skills:
            if search_query in x.lower():
                out.append(x)
        return out



handler = Handler()
for i in range(3):
    query = input()
    result = handler.search(query)
    print(result)
